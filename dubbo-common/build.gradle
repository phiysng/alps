buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'
}



group 'io.github.phiysng'
version '0.1-SNAPSHOT'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "com.google.protobuf"
apply plugin: 'org.springframework.boot'
group 'io.phiysng'
version '1.0-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
}

repositories {
    mavenCentral()
}

bootJar {
    enabled = false
}

dependencies {

//    compileOnly 'org.projectlombok:lombok:1.18.22'
//    annotationProcessor 'org.projectlombok:lombok:1.18.22'
//
//    testCompileOnly 'org.projectlombok:lombok:1.18.22'
//    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
//    implementation group: 'org.apache.dubbo', name: 'dubbo-dependencies-zookeeper', version: '3.0.3'

    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.17.3'
    implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.17.3'
    implementation 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'
    // https://mvnrepository.com/artifact/org.apache.dubbo/dubbo
    implementation group: 'org.apache.dubbo', name: 'dubbo', version: '3.0.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}